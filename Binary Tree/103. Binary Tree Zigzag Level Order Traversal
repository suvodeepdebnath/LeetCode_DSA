/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        // initialization
        vector<vector<int>> result;
        queue<TreeNode*> q;
        q.push(root);
        bool rev = false;
        
        // edge case
        if(root == NULL){
            return result;
        }
        
        
        // bfs traversal 
        while(!q.empty()){
            int size = q.size();
            vector<int> curr;
            
            // traverse the curr level's node
            for(int i = 0;i < size;i++){
                TreeNode* currNode = q.front();
                q.pop();
                curr.push_back(currNode->val);
                if(currNode->left != NULL){
                    q.push(currNode->left);
                }
                
                if(currNode->right != NULL){
                    q.push(currNode->right);
                }
                
            }
            
            if(rev){
                reverse(curr.begin(), curr.end());
            }
            result.push_back(curr);
            rev = rev == false? true : false;
        }
        
        return result;
    }
};
