// Approach I: Move the non zero elements to the left
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        // edge cases
        if(nums.empty()){
            return;
        }

        // initialization
        int index = 0;

        // iterate over the nums array
        for(int i = 0;i < nums.size();i++){
            // when there is a non zero 
            // element, bring it to the left
            if(nums[i]){
                nums[index] = nums[i];
                // mark the index as zero if it is not the current index
                nums[i] = index++ == i? nums[i] : 0;
            }
        }
    }
};

// Approach II: Move the zeros to the right side of the array
class Solution {
    void swap(vector<int>& nums, int index, int i){
        int temp = nums[index];
        nums[index] = nums[i];
        nums[i] = temp;
    }
public:
    void moveZeroes(vector<int>& nums) {
        // edge cases
        if(nums.empty()){
            return;
        }

        // initialization
        int index = 0;

        // iterate over the nums array and move the zeros to the right
        for(int i = 0;i < nums.size();i++){
            // when there is a non zero element,
            // swap it with index element
            if(nums[i]){
                swap(nums, index++, i);
            }
        }
    }
};
