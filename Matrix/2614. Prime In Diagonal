class Solution {
public:
    // function to check whether a number is prime or not
    bool isPrime(int n)
    {
        if (n <= 1)
            return false;
 
        
        for (int i = 2; i <= sqrt(n); i++)
            if (n % i == 0)
                return false;
 
        return true;
    }
    
    int diagonalPrime(vector<vector<int>>& nums) {
        // initialization
        int i, j;
        int m = nums.size();
        int maxNum = 0;
        
        // iterate over the principal diagonal
        for(i = 0;i < m;i++){
            if(isPrime(nums[i][i])){
                maxNum = max(maxNum, nums[i][i]);
            }
        }
        
        // iterate over the secondary diagonal
        for(i = 0, j = m - 1;i < m;i++, j--){
            if(isPrime(nums[i][j])){
                maxNum = max(maxNum, nums[i][j]);
            }
        }
            
        return maxNum;
    }
};
